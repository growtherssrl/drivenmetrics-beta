<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Deep Marketing Intelligence - Drivenmetrics</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: #0a0a0a;
            color: #fff;
            min-height: 100vh;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }
        
        .header {
            background: #1a1a1a;
            padding: 2rem;
            border-radius: 12px;
            margin-bottom: 2rem;
        }
        
        .header h1 {
            font-size: 2rem;
            margin-bottom: 0.5rem;
        }
        
        .header p {
            color: #999;
        }
        
        .search-box {
            background: #1a1a1a;
            padding: 2rem;
            border-radius: 12px;
            margin-bottom: 2rem;
        }
        
        .search-input {
            width: 100%;
            padding: 1rem;
            background: #0a0a0a;
            border: 1px solid #333;
            color: #fff;
            border-radius: 8px;
            font-size: 1rem;
            margin-bottom: 1rem;
        }
        
        .search-input:focus {
            outline: none;
            border-color: #0066ff;
        }
        
        .button {
            background: #0066ff;
            color: #fff;
            border: none;
            padding: 0.75rem 2rem;
            border-radius: 8px;
            font-size: 1rem;
            cursor: pointer;
            transition: background 0.2s;
        }
        
        .button:hover {
            background: #0052cc;
        }
        
        .button:disabled {
            background: #444;
            cursor: not-allowed;
        }
        
        .button.secondary {
            background: #333;
        }
        
        .button.secondary:hover {
            background: #444;
        }
        
        .search-plan {
            background: #1a1a1a;
            padding: 2rem;
            border-radius: 12px;
            margin-bottom: 2rem;
            display: none;
        }
        
        .search-plan.active {
            display: block;
        }
        
        .search-plan h3 {
            margin-bottom: 1rem;
        }
        
        .plan-content {
            background: #0a0a0a;
            padding: 1.5rem;
            border-radius: 8px;
            margin-bottom: 1rem;
            border: 1px solid #333;
        }
        
        .plan-editor-container {
            display: none;
            background: #0a0a0a;
            padding: 1.5rem;
            border-radius: 8px;
            margin-bottom: 1rem;
            border: 1px solid #333;
        }
        
        .plan-editor {
            width: 100%;
            background: #0a0a0a;
            color: #fff;
            border: 1px solid #333;
            border-radius: 8px;
            padding: 1rem;
            font-family: inherit;
            font-size: 1rem;
            line-height: 1.6;
            min-height: 150px;
            resize: vertical;
            margin-bottom: 1rem;
        }
        
        .plan-editor:focus {
            outline: none;
            border-color: #0066ff;
        }
        
        .editor-field {
            margin-bottom: 1.5rem;
        }
        
        .editor-field label {
            display: block;
            margin-bottom: 0.5rem;
            color: #999;
            font-size: 0.9rem;
            text-transform: uppercase;
            letter-spacing: 0.5px;
        }
        
        .editor-field input,
        .editor-field textarea {
            width: 100%;
            background: #1a1a1a;
            color: #fff;
            border: 1px solid #333;
            border-radius: 6px;
            padding: 0.75rem;
            font-family: inherit;
            font-size: 0.95rem;
        }
        
        .editor-field input:focus,
        .editor-field textarea:focus {
            outline: none;
            border-color: #0066ff;
        }
        
        .date-inputs {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1rem;
        }
        
        .tag-input-container {
            position: relative;
        }
        
        .tags-display {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
            margin-top: 0.5rem;
        }
        
        .tag {
            background: #333;
            color: #fff;
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.9rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .tag .remove {
            cursor: pointer;
            color: #999;
            font-size: 1.2rem;
            line-height: 1;
        }
        
        .tag .remove:hover {
            color: #ff4444;
        }
        
        .edit-actions {
            display: none;
            gap: 1rem;
            margin-top: 1rem;
        }
        
        .edit-actions.active {
            display: flex;
        }
        
        .plan-item {
            padding: 0.5rem 0;
            border-bottom: 1px solid #333;
        }
        
        .plan-item:last-child {
            border-bottom: none;
        }
        
        .plan-description {
            font-size: 1rem;
            color: #e0e0e0;
            padding: 0.5rem 0;
        }
        
        .plan-description strong {
            color: #0066ff;
        }
        
        .plan-actions {
            display: flex;
            gap: 1rem;
            margin-top: 1rem;
        }
        
        .results-container {
            background: #1a1a1a;
            padding: 2rem;
            border-radius: 12px;
            display: none;
        }
        
        .results-container.active {
            display: block;
        }
        
        .status-message {
            padding: 1rem;
            border-radius: 8px;
            margin-bottom: 1rem;
            display: none;
        }
        
        .status-message.info {
            background: #0066ff20;
            border: 1px solid #0066ff;
            color: #66b3ff;
        }
        
        .status-message.success {
            background: #00ff4420;
            border: 1px solid #00ff44;
            color: #66ff99;
        }
        
        .status-message.error {
            background: #ff444420;
            border: 1px solid #ff4444;
            color: #ff9999;
        }
        
        .loading {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 3px solid #333;
            border-top-color: #0066ff;
            border-radius: 50%;
            animation: spin 1s linear infinite;
        }
        
        @keyframes spin {
            to { transform: rotate(360deg); }
        }
        
        .search-box.hidden {
            display: none;
        }
        
        .loading-container {
            display: none;
            background: #1a1a1a;
            padding: 2rem;
            border-radius: 12px;
            margin-bottom: 2rem;
            text-align: center;
        }
        
        .loading-container.active {
            display: block;
        }
        
        .query-display {
            font-size: 1.2rem;
            color: #fff;
            margin-bottom: 2rem;
        }
        
        .loading-bar-container {
            width: 100%;
            height: 4px;
            background: #333;
            border-radius: 2px;
            overflow: hidden;
            margin-bottom: 1rem;
        }
        
        .loading-bar {
            height: 100%;
            background: linear-gradient(90deg, #0066ff 0%, #00ff88 50%, #0066ff 100%);
            background-size: 200% 100%;
            animation: loading-pulse 2s ease-in-out infinite;
        }
        
        @keyframes loading-pulse {
            0% {
                background-position: 0% 0%;
                width: 0%;
            }
            50% {
                width: 100%;
            }
            100% {
                background-position: 100% 0%;
                width: 0%;
            }
        }
        
        .loading-text {
            color: #999;
            font-size: 0.9rem;
        }
        
        .results-grid {
            display: grid;
            gap: 1rem;
            margin-top: 1rem;
        }
        
        .result-card {
            background: #0a0a0a;
            padding: 1.5rem;
            border-radius: 8px;
            border: 1px solid #333;
        }
        
        .result-card h4 {
            margin-bottom: 0.5rem;
            color: #0066ff;
        }
        
        .result-meta {
            display: flex;
            gap: 1rem;
            margin-top: 0.5rem;
            font-size: 0.9rem;
            color: #999;
        }
        
        .footer-info {
            text-align: center;
            margin-top: 3rem;
            color: #666;
            font-size: 0.9rem;
        }
        
        .footer-info .heart {
            color: #ff4444;
        }
        
        .search-history {
            background: #1a1a1a;
            padding: 2rem;
            border-radius: 12px;
            margin-bottom: 2rem;
        }
        
        .search-history h3 {
            margin-bottom: 1.5rem;
            color: #fff;
            font-size: 1.25rem;
        }
        
        .history-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));
            gap: 1rem;
        }
        
        .history-card {
            background: #0a0a0a;
            border: 1px solid #333;
            border-radius: 8px;
            padding: 1.25rem;
            cursor: pointer;
            transition: all 0.2s;
        }
        
        .history-card:hover {
            border-color: #0066ff;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(0, 102, 255, 0.1);
        }
        
        .history-query {
            color: #fff;
            font-size: 0.95rem;
            margin-bottom: 0.75rem;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: nowrap;
        }
        
        .history-meta {
            display: flex;
            justify-content: space-between;
            align-items: center;
            font-size: 0.85rem;
        }
        
        .history-date {
            color: #666;
        }
        
        .history-status {
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.8rem;
        }
        
        .history-status.completed {
            background: #00ff4420;
            color: #00ff44;
        }
        
        .history-status.executing {
            background: #ffaa0020;
            color: #ffaa00;
        }
        
        .history-status.error {
            background: #ff444420;
            color: #ff4444;
        }
        
        .history-status.planning {
            background: #0066ff20;
            color: #0066ff;
        }
    </style>
</head>
<body>
    <div style="background: #1a1a1a; border-bottom: 1px solid #333; padding: 1rem 0;">
        <div style="max-width: 1200px; margin: 0 auto; padding: 0 2rem; display: flex; align-items: center; justify-content: space-between;">
            <img src="https://app.drivenmetrics.com/assets/images/logo/logo-text-on-dark-cropped.svg" alt="Drivenmetrics" style="height: 32px;">
            <a href="/dashboard" style="color: #999; text-decoration: none; font-size: 0.9rem;">← Back to Dashboard</a>
        </div>
    </div>
    
    <div class="container">
        <div class="header">
            <h1>🔍 Deep Marketing Intelligence</h1>
            <p>Analizza le campagne pubblicitarie dei tuoi competitor con l'intelligenza artificiale</p>
        </div>
        
        <% if (searchHistory && searchHistory.length > 0) { %>
        <div class="search-history">
            <h3>📋 Ricerche Recenti</h3>
            <div class="history-grid">
                <% searchHistory.forEach(search => { %>
                <div class="history-card" onclick="viewSearchResults('<%= search.id %>')">
                    <div class="history-query"><%= search.query %></div>
                    <div class="history-meta">
                        <span class="history-date"><%= new Date(search.created_at).toLocaleDateString('it-IT') %></span>
                        <span class="history-status <%= search.status %>">
                            <% if (search.status === 'completed') { %>
                                ✅ Completata
                            <% } else if (search.status === 'executing') { %>
                                ⏳ In corso
                            <% } else if (search.status === 'error') { %>
                                ❌ Errore
                            <% } else { %>
                                📝 Pianificazione
                            <% } %>
                        </span>
                    </div>
                </div>
                <% }) %>
            </div>
        </div>
        <% } %>
        
        <div id="searchBox" class="search-box">
            <h2>Cosa vuoi analizzare?</h2>
            <textarea 
                id="searchQuery" 
                class="search-input" 
                placeholder="Es: Recuperami le campagne sulle scarpe Nike, analizza gli annunci di Adidas nell'ultimo mese, confronta le strategie di Apple e Samsung..."
                rows="3"
            ></textarea>
            <button id="analyzeBtn" class="button" onclick="createSearch()">
                Analizza
            </button>
        </div>
        
        <div id="loadingContainer" class="loading-container">
            <div class="query-display">
                <strong>Cosa vuoi analizzare:</strong> <span id="queryText"></span>
            </div>
            <div class="loading-bar-container">
                <div class="loading-bar"></div>
            </div>
            <div class="loading-text">Sto creando il piano di analisi con l'AI...</div>
        </div>
        
        <div id="searchPlan" class="search-plan">
            <h3>📋 Piano di Ricerca</h3>
            <div id="planContent" class="plan-content">
                <!-- Plan details will be inserted here -->
            </div>
            
            <div id="planEditorContainer" class="plan-editor-container">
                <div class="editor-field">
                    <label for="planDescription">Descrizione del Piano</label>
                    <textarea id="planDescription" class="plan-editor" placeholder="Descrivi dettagliatamente cosa vuoi analizzare..."></textarea>
                </div>
                
                <div class="editor-field">
                    <label for="planKeywords">Parole Chiave</label>
                    <input type="text" id="keywordInput" placeholder="Aggiungi una parola chiave e premi Invio">
                    <div id="keywordTags" class="tags-display"></div>
                </div>
                
                <div class="editor-field">
                    <label for="planPages">Pagine/Brand da Analizzare</label>
                    <input type="text" id="pageInput" placeholder="Aggiungi una pagina/brand e premi Invio">
                    <div id="pageTags" class="tags-display"></div>
                </div>
                
                <div class="editor-field">
                    <label>Periodo di Analisi</label>
                    <div class="date-inputs">
                        <input type="date" id="dateFrom" placeholder="Data inizio">
                        <input type="date" id="dateTo" placeholder="Data fine">
                    </div>
                </div>
                
                <div class="editor-field">
                    <label for="planCountries">Paesi (codice ISO)</label>
                    <input type="text" id="countryInput" placeholder="Es: IT, US, GB - premi Invio per aggiungere">
                    <div id="countryTags" class="tags-display"></div>
                </div>
            </div>
            
            <div id="planActions" class="plan-actions">
                <button class="button" onclick="executeSearch()">
                    Avvia Ricerca
                </button>
                <button class="button secondary" onclick="modifyPlan()">
                    Modifica
                </button>
                <button class="button secondary" onclick="cancelSearch()">
                    Annulla
                </button>
            </div>
            <div id="editActions" class="edit-actions">
                <button class="button" onclick="savePlan()">
                    Salva Modifiche
                </button>
                <button class="button secondary" onclick="cancelEdit()">
                    Annulla Modifiche
                </button>
            </div>
        </div>
        
        <div id="statusMessage" class="status-message"></div>
        
        <div id="resultsContainer" class="results-container">
            <h3>📊 Risultati Analisi</h3>
            <div id="resultsGrid" class="results-grid">
                <!-- Results will be inserted here -->
            </div>
        </div>
        
        <div class="footer-info">
            Crafted with <span class="heart">❤️</span> e AI by Growthers
        </div>
    </div>
    
    <script>
        let currentSearchId = null;
        let currentPlanData = null;
        let keywordsList = [];
        let pagesList = [];
        let countriesList = [];
        
        function viewSearchResults(searchId) {
            // Navigate to the results page for the selected search
            window.location.href = `/api/deep-marketing/results/${searchId}?format=html`;
        }
        
        function showStatus(message, type = 'info') {
            const statusEl = document.getElementById('statusMessage');
            statusEl.textContent = message;
            statusEl.className = `status-message ${type}`;
            statusEl.style.display = 'block';
            
            if (type !== 'error') {
                setTimeout(() => {
                    statusEl.style.display = 'none';
                }, 5000);
            }
        }
        
        async function createSearch() {
            const query = document.getElementById('searchQuery').value.trim();
            if (!query) {
                showStatus('Inserisci una richiesta di analisi', 'error');
                return;
            }
            
            // Hide search box and show loading
            document.getElementById('searchBox').classList.add('hidden');
            document.getElementById('loadingContainer').classList.add('active');
            document.getElementById('queryText').textContent = query;
            
            const analyzeBtn = document.getElementById('analyzeBtn');
            analyzeBtn.disabled = true;
            
            try {
                // Call internal API which will forward to n8n
                const response = await fetch('/api/deep-marketing/create-search', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        query: query,
                        user_id: '<%= user?.user_id || "anonymous" %>'
                    })
                });
                
                if (!response.ok) {
                    throw new Error('Errore nella creazione del piano');
                }
                
                const data = await response.json();
                currentSearchId = data.search_id;
                currentPlanData = data.plan;
                
                // Hide loading and display the search plan
                document.getElementById('loadingContainer').classList.remove('active');
                displaySearchPlan(data.plan);
                showStatus('Piano di ricerca creato!', 'success');
                
            } catch (error) {
                console.error('Error:', error);
                showStatus('Errore: ' + error.message, 'error');
                // Show search box again on error
                document.getElementById('searchBox').classList.remove('hidden');
                document.getElementById('loadingContainer').classList.remove('active');
            } finally {
                analyzeBtn.disabled = false;
                analyzeBtn.innerHTML = 'Analizza';
            }
        }
        
        function displaySearchPlan(plan) {
            const planContent = document.getElementById('planContent');
            const searchPlan = document.getElementById('searchPlan');
            
            let planHTML = '';
            
            // Se il piano ha una descrizione testuale, mostrala
            if (plan.description) {
                planHTML = `<div class="plan-description" style="white-space: pre-line; line-height: 1.6;">${plan.description}</div>`;
            } 
            // Altrimenti usa il formato tecnico (fallback)
            else {
                if (plan.keywords) {
                    planHTML += `<div class="plan-item"><strong>Parole chiave:</strong> ${plan.keywords.join(', ')}</div>`;
                }
                
                if (plan.pages) {
                    planHTML += `<div class="plan-item"><strong>Pagine da analizzare:</strong> ${plan.pages.join(', ')}</div>`;
                }
                
                if (plan.date_range) {
                    planHTML += `<div class="plan-item"><strong>Periodo:</strong> ${plan.date_range.from} - ${plan.date_range.to}</div>`;
                }
                
                if (plan.countries) {
                    planHTML += `<div class="plan-item"><strong>Paesi:</strong> ${plan.countries.join(', ')}</div>`;
                }
                
                if (plan.analysis_type) {
                    planHTML += `<div class="plan-item"><strong>Tipo di analisi:</strong> ${plan.analysis_type}</div>`;
                }
            }
            
            planContent.innerHTML = planHTML || '<p>Piano di ricerca in elaborazione...</p>';
            searchPlan.classList.add('active');
        }
        
        async function executeSearch() {
            if (!currentSearchId) {
                showStatus('Nessuna ricerca da eseguire', 'error');
                return;
            }
            
            // Show loading with different text
            document.getElementById('searchPlan').style.display = 'none';
            document.getElementById('loadingContainer').classList.add('active');
            document.querySelector('.loading-text').textContent = 'Sto eseguendo la ricerca e analizzando i dati...';
            
            try {
                const response = await fetch('/api/deep-marketing/execute-search', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        search_id: currentSearchId
                    })
                });
                
                if (!response.ok) {
                    throw new Error('Errore nell\'esecuzione della ricerca');
                }
                
                showStatus('Ricerca avviata! I risultati arriveranno a breve...', 'success');
                
                // Start polling for results
                pollForResults();
                
            } catch (error) {
                console.error('Error:', error);
                showStatus('Errore: ' + error.message, 'error');
            }
        }
        
        function modifyPlan() {
            // Switch to edit mode
            const planContent = document.getElementById('planContent');
            const planEditorContainer = document.getElementById('planEditorContainer');
            const planActions = document.getElementById('planActions');
            const editActions = document.getElementById('editActions');
            
            // Populate editor with current plan data
            if (currentPlanData) {
                // Description
                document.getElementById('planDescription').value = currentPlanData.description || '';
                
                // Keywords
                if (currentPlanData.keywords) {
                    keywordsList = [...currentPlanData.keywords];
                    updateTagsDisplay('keywordTags', keywordsList, 'keyword');
                }
                
                // Pages
                if (currentPlanData.pages) {
                    pagesList = [...currentPlanData.pages];
                    updateTagsDisplay('pageTags', pagesList, 'page');
                }
                
                // Dates
                if (currentPlanData.date_range) {
                    document.getElementById('dateFrom').value = currentPlanData.date_range.from || '';
                    document.getElementById('dateTo').value = currentPlanData.date_range.to || '';
                }
                
                // Countries
                if (currentPlanData.countries) {
                    countriesList = [...currentPlanData.countries];
                    updateTagsDisplay('countryTags', countriesList, 'country');
                }
            }
            
            // Show editor, hide content
            planContent.style.display = 'none';
            planEditorContainer.style.display = 'block';
            planActions.style.display = 'none';
            editActions.classList.add('active');
            
            // Focus on the description
            document.getElementById('planDescription').focus();
        }
        
        function savePlan() {
            const newDescription = document.getElementById('planDescription').value.trim();
            
            if (!newDescription) {
                showStatus('La descrizione del piano non può essere vuota', 'error');
                return;
            }
            
            // Update the plan data
            if (!currentPlanData) {
                currentPlanData = {};
            }
            
            currentPlanData.description = newDescription;
            currentPlanData.keywords = [...keywordsList];
            currentPlanData.pages = [...pagesList];
            currentPlanData.countries = [...countriesList];
            
            const dateFrom = document.getElementById('dateFrom').value;
            const dateTo = document.getElementById('dateTo').value;
            if (dateFrom || dateTo) {
                currentPlanData.date_range = {
                    from: dateFrom || '',
                    to: dateTo || ''
                };
            }
            
            // Exit edit mode and update display
            cancelEdit();
            displaySearchPlan(currentPlanData);
            showStatus('Piano modificato con successo!', 'success');
        }
        
        function updateTagsDisplay(containerId, items, type) {
            const container = document.getElementById(containerId);
            container.innerHTML = items.map((item, index) => 
                `<span class="tag">
                    ${item}
                    <span class="remove" onclick="removeTag('${type}', ${index})">×</span>
                </span>`
            ).join('');
        }
        
        function removeTag(type, index) {
            if (type === 'keyword') {
                keywordsList.splice(index, 1);
                updateTagsDisplay('keywordTags', keywordsList, 'keyword');
            } else if (type === 'page') {
                pagesList.splice(index, 1);
                updateTagsDisplay('pageTags', pagesList, 'page');
            } else if (type === 'country') {
                countriesList.splice(index, 1);
                updateTagsDisplay('countryTags', countriesList, 'country');
            }
        }
        
        function addTag(inputId, type) {
            const input = document.getElementById(inputId);
            const value = input.value.trim();
            
            if (!value) return;
            
            if (type === 'keyword' && !keywordsList.includes(value)) {
                keywordsList.push(value);
                updateTagsDisplay('keywordTags', keywordsList, 'keyword');
            } else if (type === 'page' && !pagesList.includes(value)) {
                pagesList.push(value);
                updateTagsDisplay('pageTags', pagesList, 'page');
            } else if (type === 'country' && !countriesList.includes(value.toUpperCase())) {
                countriesList.push(value.toUpperCase());
                updateTagsDisplay('countryTags', countriesList, 'country');
            }
            
            input.value = '';
        }
        
        function cancelEdit() {
            // Exit edit mode without saving
            const planContent = document.getElementById('planContent');
            const planEditorContainer = document.getElementById('planEditorContainer');
            const planActions = document.getElementById('planActions');
            const editActions = document.getElementById('editActions');
            
            // Reset lists
            keywordsList = [];
            pagesList = [];
            countriesList = [];
            
            planContent.style.display = 'block';
            planEditorContainer.style.display = 'none';
            planActions.style.display = 'flex';
            editActions.classList.remove('active');
        }
        
        function cancelSearch() {
            currentSearchId = null;
            document.getElementById('searchPlan').classList.remove('active');
            document.getElementById('searchBox').classList.remove('hidden');
            document.getElementById('searchQuery').value = '';
            showStatus('Ricerca annullata', 'info');
        }
        
        async function pollForResults() {
            if (!currentSearchId) return;
            
            try {
                const response = await fetch(`/api/deep-marketing/results/${currentSearchId}`);
                
                if (response.ok) {
                    const data = await response.json();
                    
                    if (data.status === 'completed') {
                        // Redirect to results page with HTML format
                        window.location.href = `/api/deep-marketing/results/${currentSearchId}?format=html`;
                        currentSearchId = null;
                    } else if (data.status === 'error') {
                        showStatus('Errore nell\'analisi: ' + data.error, 'error');
                        currentSearchId = null;
                    } else {
                        // Still processing, poll again
                        setTimeout(pollForResults, 2000);
                    }
                } else if (response.status === 404) {
                    // Results not ready yet
                    setTimeout(pollForResults, 2000);
                }
            } catch (error) {
                console.error('Polling error:', error);
                setTimeout(pollForResults, 5000);
            }
        }
        
        function displayResults(results) {
            const resultsContainer = document.getElementById('resultsContainer');
            const resultsGrid = document.getElementById('resultsGrid');
            
            if (!results || results.length === 0) {
                resultsGrid.innerHTML = '<p>Nessun risultato trovato</p>';
                resultsContainer.classList.add('active');
                return;
            }
            
            let resultsHTML = '';
            
            results.forEach(result => {
                resultsHTML += `
                    <div class="result-card">
                        <h4>${result.page_name || 'Annuncio'}</h4>
                        <p>${result.ad_creative_bodies ? result.ad_creative_bodies[0] : 'Nessun testo disponibile'}</p>
                        <div class="result-meta">
                            <span>📅 ${new Date(result.ad_delivery_start_time).toLocaleDateString('it-IT')}</span>
                            <span>🌍 ${result.publisher_platforms ? result.publisher_platforms.join(', ') : 'N/A'}</span>
                            <span><a href="${result.ad_snapshot_url}" target="_blank">Vedi annuncio →</a></span>
                        </div>
                    </div>
                `;
            });
            
            resultsGrid.innerHTML = resultsHTML;
            resultsContainer.classList.add('active');
        }
        
        // Enable Enter key to submit
        document.getElementById('searchQuery').addEventListener('keypress', function(e) {
            if (e.key === 'Enter' && !e.shiftKey) {
                e.preventDefault();
                createSearch();
            }
        });
        
        // Add event listeners for tag inputs
        document.getElementById('keywordInput').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                e.preventDefault();
                addTag('keywordInput', 'keyword');
            }
        });
        
        document.getElementById('pageInput').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                e.preventDefault();
                addTag('pageInput', 'page');
            }
        });
        
        document.getElementById('countryInput').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                e.preventDefault();
                addTag('countryInput', 'country');
            }
        });
    </script>
</body>
</html>