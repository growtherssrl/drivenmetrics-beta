<!DOCTYPE html>
<html lang="it">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Cronologia Ricerche - Deep Marketing Intelligence | Drivenmetrics</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        
        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: #0a0a0a;
            color: #fff;
            min-height: 100vh;
        }
        
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 2rem;
        }
        
        .header {
            background: #1a1a1a;
            padding: 2rem;
            border-radius: 12px;
            margin-bottom: 2rem;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .header-content h1 {
            font-size: 2rem;
            margin-bottom: 0.5rem;
        }
        
        .header-content p {
            color: #999;
        }
        
        .btn-new-search {
            background: #0066ff;
            color: #fff;
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            font-size: 1rem;
            cursor: pointer;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            transition: all 0.2s;
        }
        
        .btn-new-search:hover {
            background: #0052cc;
            transform: translateY(-2px);
        }
        
        .filters {
            background: #1a1a1a;
            padding: 1.5rem;
            border-radius: 12px;
            margin-bottom: 2rem;
            display: flex;
            gap: 1rem;
            flex-wrap: wrap;
            align-items: center;
        }
        
        .filter-item {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
        }
        
        .filter-label {
            font-size: 0.875rem;
            color: #999;
        }
        
        .filter-select, .filter-input {
            background: #0a0a0a;
            color: #fff;
            border: 1px solid #333;
            padding: 0.5rem 1rem;
            border-radius: 6px;
            font-size: 0.9rem;
            min-width: 150px;
        }
        
        .search-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
            gap: 1.5rem;
            margin-bottom: 2rem;
        }
        
        .search-card {
            background: #1a1a1a;
            border: 1px solid #333;
            border-radius: 12px;
            padding: 1.5rem;
            cursor: pointer;
            transition: all 0.3s;
            position: relative;
            overflow: hidden;
        }
        
        .search-card:hover {
            border-color: #0066ff;
            transform: translateY(-4px);
            box-shadow: 0 8px 24px rgba(0, 102, 255, 0.1);
        }
        
        .search-card::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            height: 3px;
            background: #333;
        }
        
        .search-card.completed::before { background: #00ff44; }
        .search-card.executing::before { background: #ffaa00; }
        .search-card.planning::before { background: #0066ff; }
        .search-card.error::before { background: #ff4444; }
        
        .search-query {
            font-size: 1.1rem;
            color: #fff;
            margin-bottom: 1rem;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
            line-height: 1.4;
        }
        
        .search-meta {
            display: flex;
            flex-direction: column;
            gap: 0.5rem;
            font-size: 0.875rem;
            color: #999;
        }
        
        .search-meta-row {
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .search-date {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .search-status {
            padding: 0.25rem 0.75rem;
            border-radius: 20px;
            font-size: 0.8rem;
            font-weight: 500;
        }
        
        .search-status.completed {
            background: #00ff4420;
            color: #00ff44;
        }
        
        .search-status.executing {
            background: #ffaa0020;
            color: #ffaa00;
        }
        
        .search-status.error {
            background: #ff444420;
            color: #ff4444;
        }
        
        .search-status.planning {
            background: #0066ff20;
            color: #0066ff;
        }
        
        .search-duration {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .empty-state {
            text-align: center;
            padding: 4rem 2rem;
            color: #666;
        }
        
        .empty-state h3 {
            font-size: 1.5rem;
            margin-bottom: 1rem;
            color: #999;
        }
        
        .empty-state p {
            margin-bottom: 2rem;
        }
        
        .pagination {
            display: flex;
            justify-content: center;
            gap: 0.5rem;
            margin-top: 2rem;
        }
        
        .page-btn {
            padding: 0.5rem 1rem;
            background: #1a1a1a;
            border: 1px solid #333;
            color: #999;
            border-radius: 6px;
            cursor: pointer;
            transition: all 0.2s;
        }
        
        .page-btn:hover {
            border-color: #0066ff;
            color: #fff;
        }
        
        .page-btn.active {
            background: #0066ff;
            border-color: #0066ff;
            color: #fff;
        }
        
        .page-btn:disabled {
            opacity: 0.5;
            cursor: not-allowed;
        }
        
        .footer-info {
            text-align: center;
            margin-top: 3rem;
            color: #666;
            font-size: 0.9rem;
        }
        
        .footer-info .heart {
            color: #ff4444;
        }
        
        @media (max-width: 768px) {
            .header {
                flex-direction: column;
                gap: 1rem;
                text-align: center;
            }
            
            .filters {
                flex-direction: column;
                align-items: stretch;
            }
            
            .filter-select, .filter-input {
                width: 100%;
            }
            
            .search-grid {
                grid-template-columns: 1fr;
            }
        }
    </style>
</head>
<body>
    <div style="background: #1a1a1a; border-bottom: 1px solid #333; padding: 1rem 0;">
        <div style="max-width: 1200px; margin: 0 auto; padding: 0 2rem; display: flex; align-items: center; justify-content: space-between;">
            <img src="https://app.drivenmetrics.com/assets/images/logo/logo-text-on-dark-cropped.svg" alt="Drivenmetrics" style="height: 32px;">
            <a href="/dashboard" style="color: #999; text-decoration: none; font-size: 0.9rem;">‚Üê Back to Dashboard</a>
        </div>
    </div>
    
    <div class="container">
        <div class="header">
            <div class="header-content">
                <h1>üìã Cronologia Ricerche</h1>
                <p>Tutte le tue analisi di marketing intelligence</p>
            </div>
            <a href="/deep-marketing" class="btn-new-search">
                <svg width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                    <circle cx="11" cy="11" r="8"></circle>
                    <path d="m21 21-4.35-4.35"></path>
                    <path d="M11 8v6M8 11h6"></path>
                </svg>
                Nuova Ricerca
            </a>
        </div>
        
        <div class="filters">
            <div class="filter-item">
                <label class="filter-label">Stato</label>
                <select class="filter-select" id="statusFilter" onchange="filterSearches()">
                    <option value="">Tutti gli stati</option>
                    <option value="completed">Completate</option>
                    <option value="executing">In esecuzione</option>
                    <option value="planning">In pianificazione</option>
                    <option value="error">Con errori</option>
                </select>
            </div>
            
            <div class="filter-item">
                <label class="filter-label">Periodo</label>
                <select class="filter-select" id="periodFilter" onchange="filterSearches()">
                    <option value="">Tutto il periodo</option>
                    <option value="today">Oggi</option>
                    <option value="week">Ultima settimana</option>
                    <option value="month">Ultimo mese</option>
                    <option value="3months">Ultimi 3 mesi</option>
                </select>
            </div>
            
            <div class="filter-item">
                <label class="filter-label">Cerca</label>
                <input type="text" class="filter-input" id="searchFilter" placeholder="Cerca nelle query..." oninput="filterSearches()">
            </div>
        </div>
        
        <div id="searchGrid" class="search-grid">
            <% if (searches && searches.length > 0) { %>
                <% searches.forEach(search => { %>
                <div class="search-card <%= search.status %>" onclick="viewSearchResults('<%= search.id %>')">
                    <div class="search-query"><%= search.query %></div>
                    <div class="search-meta">
                        <div class="search-meta-row">
                            <div class="search-date">
                                <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                    <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
                                    <line x1="16" y1="2" x2="16" y2="6"></line>
                                    <line x1="8" y1="2" x2="8" y2="6"></line>
                                    <line x1="3" y1="10" x2="21" y2="10"></line>
                                </svg>
                                <%= new Date(search.created_at).toLocaleDateString('it-IT', { day: 'numeric', month: 'short', year: 'numeric' }) %>
                            </div>
                            <span class="search-status <%= search.status %>">
                                <% if (search.status === 'completed') { %>
                                    ‚úÖ Completata
                                <% } else if (search.status === 'executing') { %>
                                    ‚è≥ In corso
                                <% } else if (search.status === 'error') { %>
                                    ‚ùå Errore
                                <% } else { %>
                                    üìù Pianificazione
                                <% } %>
                            </span>
                        </div>
                        <% if (search.completed_at && search.status === 'completed') { %>
                        <div class="search-duration">
                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <circle cx="12" cy="12" r="10"></circle>
                                <polyline points="12 6 12 12 16 14"></polyline>
                            </svg>
                            <%
                            const duration = new Date(search.completed_at) - new Date(search.created_at);
                            const minutes = Math.floor(duration / 60000);
                            const seconds = Math.floor((duration % 60000) / 1000);
                            %>
                            <%= minutes > 0 ? `${minutes}m ${seconds}s` : `${seconds}s` %>
                        </div>
                        <% } %>
                    </div>
                </div>
                <% }) %>
            <% } else { %>
                <div class="empty-state" style="grid-column: 1 / -1;">
                    <h3>Nessuna ricerca trovata</h3>
                    <p>Non hai ancora effettuato analisi di marketing intelligence.</p>
                    <a href="/deep-marketing" class="btn-new-search">
                        Inizia la tua prima ricerca
                    </a>
                </div>
            <% } %>
        </div>
        
        <% if (totalPages > 1) { %>
        <div class="pagination">
            <button class="page-btn" onclick="changePage(<%= currentPage - 1 %>)" <%= currentPage === 1 ? 'disabled' : '' %>>
                ‚Üê
            </button>
            <% for(let i = 1; i <= totalPages; i++) { %>
                <button class="page-btn <%= i === currentPage ? 'active' : '' %>" onclick="changePage(<%= i %>)">
                    <%= i %>
                </button>
            <% } %>
            <button class="page-btn" onclick="changePage(<%= currentPage + 1 %>)" <%= currentPage === totalPages ? 'disabled' : '' %>>
                ‚Üí
            </button>
        </div>
        <% } %>
        
        <div class="footer-info">
            Crafted with <span class="heart">‚ù§Ô∏è</span> e AI by Growthers
        </div>
    </div>
    
    <script>
        // Original searches data
        const allSearches = <%- JSON.stringify(searches || []) %>;
        let filteredSearches = [...allSearches];
        
        function viewSearchResults(searchId) {
            window.location.href = `/api/deep-marketing/results/${searchId}?format=html`;
        }
        
        function filterSearches() {
            const statusFilter = document.getElementById('statusFilter').value;
            const periodFilter = document.getElementById('periodFilter').value;
            const searchFilter = document.getElementById('searchFilter').value.toLowerCase();
            
            filteredSearches = allSearches.filter(search => {
                // Status filter
                if (statusFilter && search.status !== statusFilter) return false;
                
                // Period filter
                if (periodFilter) {
                    const searchDate = new Date(search.created_at);
                    const now = new Date();
                    const daysDiff = (now - searchDate) / (1000 * 60 * 60 * 24);
                    
                    switch(periodFilter) {
                        case 'today':
                            if (daysDiff > 1) return false;
                            break;
                        case 'week':
                            if (daysDiff > 7) return false;
                            break;
                        case 'month':
                            if (daysDiff > 30) return false;
                            break;
                        case '3months':
                            if (daysDiff > 90) return false;
                            break;
                    }
                }
                
                // Search filter
                if (searchFilter && !search.query.toLowerCase().includes(searchFilter)) return false;
                
                return true;
            });
            
            renderSearchGrid();
        }
        
        function renderSearchGrid() {
            const grid = document.getElementById('searchGrid');
            
            if (filteredSearches.length === 0) {
                grid.innerHTML = `
                    <div class="empty-state" style="grid-column: 1 / -1;">
                        <h3>Nessuna ricerca trovata</h3>
                        <p>Prova a modificare i filtri di ricerca.</p>
                    </div>
                `;
                return;
            }
            
            grid.innerHTML = filteredSearches.map(search => {
                const createdDate = new Date(search.created_at);
                const dateStr = createdDate.toLocaleDateString('it-IT', { day: 'numeric', month: 'short', year: 'numeric' });
                
                let statusBadge = '';
                switch(search.status) {
                    case 'completed':
                        statusBadge = '‚úÖ Completata';
                        break;
                    case 'executing':
                        statusBadge = '‚è≥ In corso';
                        break;
                    case 'error':
                        statusBadge = '‚ùå Errore';
                        break;
                    default:
                        statusBadge = 'üìù Pianificazione';
                }
                
                let durationHtml = '';
                if (search.updated_at && search.status === 'completed') {
                    const duration = new Date(search.updated_at) - new Date(search.created_at);
                    const minutes = Math.floor(duration / 60000);
                    const seconds = Math.floor((duration % 60000) / 1000);
                    const durationStr = minutes > 0 ? `${minutes}m ${seconds}s` : `${seconds}s`;
                    
                    durationHtml = `
                        <div class="search-duration">
                            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                <circle cx="12" cy="12" r="10"></circle>
                                <polyline points="12 6 12 12 16 14"></polyline>
                            </svg>
                            ${durationStr}
                        </div>
                    `;
                }
                
                return `
                    <div class="search-card ${search.status}" onclick="viewSearchResults('${search.id}')">
                        <div class="search-query">${search.query}</div>
                        <div class="search-meta">
                            <div class="search-meta-row">
                                <div class="search-date">
                                    <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
                                        <rect x="3" y="4" width="18" height="18" rx="2" ry="2"></rect>
                                        <line x1="16" y1="2" x2="16" y2="6"></line>
                                        <line x1="8" y1="2" x2="8" y2="6"></line>
                                        <line x1="3" y1="10" x2="21" y2="10"></line>
                                    </svg>
                                    ${dateStr}
                                </div>
                                <span class="search-status ${search.status}">
                                    ${statusBadge}
                                </span>
                            </div>
                            ${durationHtml}
                        </div>
                    </div>
                `;
            }).join('');
        }
        
        function changePage(page) {
            // This would need server-side implementation for real pagination
            window.location.href = `/deep-marketing/history?page=${page}`;
        }
    </script>
</body>
</html>